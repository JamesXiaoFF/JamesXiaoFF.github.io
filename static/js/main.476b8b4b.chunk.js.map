{"version":3,"sources":["App.js","index.js"],"names":["App","showImage","url","Promise","resolve","reject","imageObj","Image","src","onload","onerror","err","loadImageToCanvas","then","loadVideoToCanvas","catch","alert","video","current","play","addEventListener","timerCallback","paused","ended","computeFrame","setTimeout","ctx1","canvas1","getContext","drawImage","state","x","y","width","height","fillStyle","fillRect","React","createRef","ref","this","controls","crossOrigin","className","bounds","size","position","onDragStart","e","d","onDragStop","clearRect","setState","console","log","onResizeStart","direction","delta","onResizeStop","offsetWidth","offsetHeight","enableResizing","id","Button","variant","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAkBqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBAWFC,UAAY,YA1Bd,SAA2BC,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAW,IAAIC,MACnBD,EAASE,IAAMN,EACfI,EAASG,OAAS,WAChBL,EAAQE,IAEVA,EAASI,QAAU,SAAUC,GAC3BN,EAAOM,QAqBTC,CAFY,4DAEWC,MAAK,SAAAP,GAC1B,EAAKQ,uBACJC,OAAM,SAAAJ,GACPK,MAAML,OAlBI,EAsBdG,kBAAoB,WAClB,IAAMG,EAAQ,EAAKA,MAAMC,QACzBD,EAAME,OAENF,EAAMG,iBAAiB,QAAQ,WAC7B,EAAKC,mBACJ,IA5BS,EA+BdA,cAAgB,WACd,IAAMJ,EAAQ,EAAKA,MAAMC,QAErBD,EAAMK,QAAUL,EAAMM,QAG1B,EAAKC,eACLC,YAAW,WACT,EAAKJ,kBACJ,KAxCS,EA2CdG,aAAe,WACb,IAAMP,EAAQ,EAAKA,MAAMC,QAEnBQ,EADU,EAAKC,QAAQT,QACRU,WAAW,MAEhCF,EAAKG,UAAUZ,EAAO,EAAKa,MAAMC,EAAG,EAAKD,MAAME,EAAG,EAAKF,MAAMG,MAAO,EAAKH,MAAMI,QAE/ER,EAAKS,UAAY,eACjBT,EAAKU,SAAS,EAAKN,MAAMC,EAAG,EAAKD,MAAME,EAAI,EAAKF,MAAMI,OAAQ,EAAKJ,MAAMG,MAAO,IAjDhF,EAAKH,MAAQ,CACXC,EAAG,IACHC,EAAG,IACHC,MAAO,IACPC,OAAQ,KAEV,EAAKP,QAAUU,IAAMC,YACrB,EAAKrB,MAAQoB,IAAMC,YATP,E,0CAuDd,WAAU,IAAD,OACP,OACE,gCACE,uBAAOC,IAAKC,KAAKvB,MAAOT,IAAI,0EAA0EiC,UAAU,EAAMC,YAAY,cAClI,sBAAKC,UAAU,UAAf,UACE,wBAAQJ,IAAKC,KAAKb,QAASM,MAAM,QAAQC,OAAO,UAChD,cAAC,IAAD,CAEEU,OAAO,SACPC,KAAM,CAAEZ,MAAOO,KAAKV,MAAMG,MAAOC,OAAQM,KAAKV,MAAMI,QACpDY,SAAU,CAAEf,EAAGS,KAAKV,MAAMC,EAAGC,EAAGQ,KAAKV,MAAME,GAE3Ce,YAAa,SAACC,EAAGC,KAIjBC,WAAY,SAACF,EAAGC,GACE,EAAKtB,QAAQT,QACRU,WAAW,MAC3BuB,UAAU,EAAKrB,MAAMC,EAAG,EAAKD,MAAME,EAAG,EAAKF,MAAMG,MAAO,EAAKH,MAAMI,OAAS,GACjF,EAAKkB,SAAS,CAAErB,EAAGkB,EAAElB,EAAGC,EAAGiB,EAAEjB,IAAK,kBAAMqB,QAAQC,IAAI,EAAKxB,UACzD,EAAKN,gBAGP+B,cAAe,SAACP,EAAGQ,EAAWjB,EAAKkB,EAAOX,KAI1CY,aAAc,SAACV,EAAGQ,EAAWjB,EAAKkB,EAAOX,GACvB,EAAKnB,QAAQT,QACRU,WAAW,MAC3BuB,UAAU,EAAKrB,MAAMC,EAAG,EAAKD,MAAME,EAAG,EAAKF,MAAMG,MAAO,EAAKH,MAAMI,OAAS,GACjF,EAAKkB,SAAS,CACZnB,MAAOM,EAAIoB,YACXzB,OAAQK,EAAIqB,eAEd,EAAKpC,gBAGPqC,gBAAgB,EAjClB,SAmCE,qBAAKC,GAAG,aAGZ,cAACC,EAAA,EAAD,CAAQD,GAAG,SAASE,QAAQ,YAAYC,QAASzB,KAAKvC,UAAtD,iC,GApGyBiE,aCbjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.476b8b4b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport { Rnd } from \"react-rnd\"\n\nfunction loadImageToCanvas(url) {\n  return new Promise((resolve, reject) => {\n    let imageObj = new Image()\n    imageObj.src = url\n    imageObj.onload = function () {\n      resolve(imageObj)\n    }\n    imageObj.onerror = function (err) {\n      reject(err)\n    }\n  })\n}\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200\n    }\n    this.canvas1 = React.createRef()\n    this.video = React.createRef()\n  }\n\n  showImage = () => {\n    const url = 'https://media-public.canva.cn/k2Xu0/MAEhC6k2Xu0/1/s2.png'\n    //废弃画背景image，改为将image在css中作为背景，但暂时保留此方法\n    loadImageToCanvas(url).then(imageObj => {\n      this.loadVideoToCanvas()\n    }).catch(err => {\n      alert(err)\n    })\n  }\n\n  loadVideoToCanvas = () => {\n    const video = this.video.current\n    video.play()\n    //监听第一次播放\n    video.addEventListener('play', () => {\n      this.timerCallback();\n    }, false);\n  }\n\n  timerCallback = () => {\n    const video = this.video.current\n    //若不在播放则返回\n    if (video.paused || video.ended) {\n      return;\n    }\n    this.computeFrame();\n    setTimeout(() => {\n      this.timerCallback();\n    }, 0);\n  }\n\n  computeFrame = () => {\n    const video = this.video.current\n    const canvas1 = this.canvas1.current\n    const ctx1 = canvas1.getContext('2d')\n    //画视频的每一帧\n    ctx1.drawImage(video, this.state.x, this.state.y, this.state.width, this.state.height);\n    //画视频每一帧下面的红条\n    ctx1.fillStyle = 'rgb(255,0,0)'\n    ctx1.fillRect(this.state.x, this.state.y + this.state.height, this.state.width, 2)\n\n  }\n\n  render() {\n    return (\n      <div>\n        <video ref={this.video} src=\"https://mdn.github.io/dom-examples/canvas/chroma-keying/media/video.mp4\" controls={true} crossOrigin=\"anonymous\" />\n        <div className=\"canvas1\">\n          <canvas ref={this.canvas1} width=\"360px\" height=\"640px\"></canvas>\n          <Rnd\n            // style={{ background: \"#f7c744\" }}  //用于测试\n            bounds=\"parent\"\n            size={{ width: this.state.width, height: this.state.height }}\n            position={{ x: this.state.x, y: this.state.y }}\n            //暂时没有弄清原理\n            onDragStart={(e, d) => {\n\n            }}\n            //拖拽结束执行\n            onDragStop={(e, d) => {\n              const canvas1 = this.canvas1.current\n              const ctx1 = canvas1.getContext('2d')\n              ctx1.clearRect(this.state.x, this.state.y, this.state.width, this.state.height + 2);\n              this.setState({ x: d.x, y: d.y }, () => console.log(this.state));\n              this.computeFrame()\n            }}\n            //暂时没有弄清原理\n            onResizeStart={(e, direction, ref, delta, position) => {\n\n            }}\n            //缩放结束执行\n            onResizeStop={(e, direction, ref, delta, position) => {\n              const canvas1 = this.canvas1.current\n              const ctx1 = canvas1.getContext('2d')\n              ctx1.clearRect(this.state.x, this.state.y, this.state.width, this.state.height + 2);\n              this.setState({\n                width: ref.offsetWidth,\n                height: ref.offsetHeight\n              });\n              this.computeFrame()\n            }}\n\n            enableResizing={true}\n          >\n            <div id=\"rnd\"></div>\n          </Rnd>\n        </div>\n        <Button id=\"button\" variant=\"contained\" onClick={this.showImage}>开始</Button>\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}