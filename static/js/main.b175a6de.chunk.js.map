{"version":3,"sources":["App.js","index.js"],"names":["App","showImage","canvas1","current","ctx1","getContext","url","Promise","resolve","reject","imageObj","Image","src","onload","onerror","err","loadImageToCanvas","then","drawImage","width","height","fillStyle","fillRect","loadVideoToCanvas","catch","alert","video","play","addEventListener","timerCallback","paused","ended","computeFrame","setTimeout","React","createRef","ref","this","controls","crossOrigin","Button","id","variant","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAkBqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBAKFC,UAAY,WACV,IAAMC,EAAU,EAAKA,QAAQC,QACvBC,EAAOF,EAAQG,WAAW,OAtBpC,SAA2BC,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAW,IAAIC,MACnBD,EAASE,IAAMN,EACfI,EAASG,OAAS,WAChBL,EAAQE,IAEVA,EAASI,QAAU,SAAUC,GAC3BN,EAAOM,QAgBTC,CADY,4DACWC,MAAK,SAAAP,GAC1BN,EAAKc,UAAUR,EAAU,EAAG,EAAGR,EAAQiB,MAAOjB,EAAQkB,OAAS,GAC/DhB,EAAKiB,UAAY,eACjBjB,EAAKkB,SAAS,EAAGpB,EAAQkB,OAAS,EAAGlB,EAAQiB,MAAO,GACpD,EAAKI,uBACJC,OAAM,SAAAT,GACPU,MAAMV,OAhBI,EAoBdQ,kBAAoB,WAClB,IAAMrB,EAAU,EAAKA,QAAQC,QACvBuB,EAAQ,EAAKA,MAAMvB,QACzBuB,EAAMC,OACND,EAAME,iBAAiB,QAAQ,WAC7B,EAAKT,MAAQjB,EAAQiB,MACrB,EAAKC,OAASlB,EAAQkB,OAAS,EAC/B,EAAKS,mBACJ,IA5BS,EA+BdA,cAAgB,WACd,IAAMH,EAAQ,EAAKA,MAAMvB,QACrBuB,EAAMI,QAAUJ,EAAMK,QAG1B,EAAKC,eACLC,YAAW,WACT,EAAKJ,kBACJ,KAvCS,EA0CdG,aAAe,WACb,IAAMN,EAAQ,EAAKA,MAAMvB,QACT,EAAKD,QAAQC,QACRE,WAAW,MAC3Ba,UAAUQ,EAAO,EAAG,EAAG,EAAKP,MAAO,EAAKC,SA5C7C,EAAKlB,QAAUgC,IAAMC,YACrB,EAAKT,MAAQQ,IAAMC,YAHP,E,0CAiDd,WACE,OACE,gCACE,uBAAOC,IAAKC,KAAKX,MAAOd,IAAI,0EAA0E0B,UAAU,EAAMC,YAAY,cAClI,wBAAQH,IAAKC,KAAKnC,QAASiB,MAAM,QAAQC,OAAO,UAChD,cAACoB,EAAA,EAAD,CAAQC,GAAG,SAASC,QAAQ,YAAYC,QAASN,KAAKpC,UAAtD,iC,GAvDyB2C,aCbjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b175a6de.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport { Rnd } from \"react-rnd\"\n\nfunction loadImageToCanvas(url) {\n  return new Promise((resolve, reject) => {\n    let imageObj = new Image()\n    imageObj.src = url\n    imageObj.onload = function () {\n      resolve(imageObj)\n    }\n    imageObj.onerror = function (err) {\n      reject(err)\n    }\n  })\n}\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.canvas1 = React.createRef()\n    this.video = React.createRef()\n  }\n\n  showImage = () => {\n    const canvas1 = this.canvas1.current\n    const ctx1 = canvas1.getContext('2d')\n    const url = 'https://media-public.canva.cn/k2Xu0/MAEhC6k2Xu0/1/s2.png'\n    loadImageToCanvas(url).then(imageObj => {\n      ctx1.drawImage(imageObj, 0, 0, canvas1.width, canvas1.height - 2)\n      ctx1.fillStyle = 'rgb(255,0,0)'\n      ctx1.fillRect(0, canvas1.height - 2, canvas1.width, 2)\n      this.loadVideoToCanvas()\n    }).catch(err => {\n      alert(err)\n    })\n  }\n\n  loadVideoToCanvas = () => {\n    const canvas1 = this.canvas1.current\n    const video = this.video.current\n    video.play()\n    video.addEventListener('play', () => {  //监听第一次播放\n      this.width = canvas1.width;\n      this.height = canvas1.height - 2;\n      this.timerCallback();\n    }, false);\n  }\n\n  timerCallback = () => {\n    const video = this.video.current\n    if (video.paused || video.ended) {    //若不在播放则返回\n      return;\n    }\n    this.computeFrame();\n    setTimeout(() => {\n      this.timerCallback();\n    }, 0);\n  }\n\n  computeFrame = () => {\n    const video = this.video.current\n    const canvas1 = this.canvas1.current\n    const ctx1 = canvas1.getContext('2d')\n    ctx1.drawImage(video, 0, 0, this.width, this.height);\n  }\n\n  render() {\n    return (\n      <div>\n        <video ref={this.video} src=\"https://mdn.github.io/dom-examples/canvas/chroma-keying/media/video.mp4\" controls={true} crossOrigin=\"anonymous\" />\n        <canvas ref={this.canvas1} width=\"360px\" height=\"640px\"></canvas>\n        <Button id=\"button\" variant=\"contained\" onClick={this.showImage}>开始</Button>\n\n\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}